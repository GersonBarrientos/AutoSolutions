-- ===== CATÁLOGOS BÁSICOS =====
CREATE TABLE SERVICIO (
  ID            NUMBER(10)    PRIMARY KEY,
  NOMBRE        VARCHAR2(100) NOT NULL UNIQUE,
  PRECIO_UNIT   NUMBER(19,4)  DEFAULT 0 NOT NULL,
  ACTIVO        NUMBER(1)     DEFAULT 1 NOT NULL
);
CREATE SEQUENCE SERVICIO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_SERVICIO
  BEFORE INSERT ON SERVICIO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT SERVICIO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE REPUESTO (
  ID            NUMBER(10)    PRIMARY KEY,
  NOMBRE        VARCHAR2(120) NOT NULL UNIQUE,
  PRECIO_UNIT   NUMBER(19,4)  DEFAULT 0 NOT NULL,
  STOCK         NUMBER(10,2)  DEFAULT 0 NOT NULL,
  ACTIVO        NUMBER(1)     DEFAULT 1 NOT NULL
);
CREATE SEQUENCE REPUESTO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_REPUESTO
  BEFORE INSERT ON REPUESTO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT REPUESTO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE ESTADO_ORDEN (
  ID       NUMBER(3)     PRIMARY KEY,
  NOMBRE   VARCHAR2(30)  NOT NULL UNIQUE
);

-- ===== MAESTROS =====
CREATE TABLE CLIENTE (
  ID          NUMBER(10)     PRIMARY KEY,
  NOMBRE      VARCHAR2(100)  NOT NULL,
  TELEFONO    VARCHAR2(20),
  EMAIL       VARCHAR2(120),
  DIRECCION   VARCHAR2(200),
  CREATED_AT  TIMESTAMP(6)   DEFAULT SYSTIMESTAMP NOT NULL
);
CREATE SEQUENCE CLIENTE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_CLIENTE
  BEFORE INSERT ON CLIENTE
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT CLIENTE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE VEHICULO (
  ID          NUMBER(10)     PRIMARY KEY,
  CLIENTE_ID  NUMBER(10)     NOT NULL,
  PLACA       VARCHAR2(15)   NOT NULL UNIQUE,
  MARCA       VARCHAR2(50),
  MODELO      VARCHAR2(50),
  ANIO        NUMBER(4),
  COLOR       VARCHAR2(30),
  VIN         VARCHAR2(30),
  CREATED_AT  TIMESTAMP(6)   DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_VEHICULO_CLIENTE FOREIGN KEY (CLIENTE_ID)
    REFERENCES CLIENTE(ID)
);
CREATE SEQUENCE VEHICULO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_VEHICULO
  BEFORE INSERT ON VEHICULO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT VEHICULO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

-- ===== MOVIMIENTOS =====
CREATE TABLE ORDEN_TRABAJO (
  ID               NUMBER(10)     PRIMARY KEY,
  VEHICULO_ID      NUMBER(10)     NOT NULL,
  ESTADO_ID        NUMBER(3)      NOT NULL,
  FECHA_INGRESO    TIMESTAMP(6)   DEFAULT SYSTIMESTAMP NOT NULL,
  FECHA_SALIDA     TIMESTAMP(6),
  KM_INGRESO       NUMBER(10),
  DIAGNOSTICO      VARCHAR2(1000),
  OBSERVACIONES    VARCHAR2(1000),
  SUBTOTAL_MO      NUMBER(19,4)   DEFAULT 0 NOT NULL,
  SUBTOTAL_REP     NUMBER(19,4)   DEFAULT 0 NOT NULL,
  DESCUENTO        NUMBER(19,4)   DEFAULT 0 NOT NULL,
  IMPUESTO         NUMBER(19,4)   DEFAULT 0 NOT NULL,
  TOTAL            NUMBER(19,4)   DEFAULT 0 NOT NULL,
  CONSTRAINT FK_ORDEN_VEHICULO FOREIGN KEY (VEHICULO_ID) REFERENCES VEHICULO(ID),
  CONSTRAINT FK_ORDEN_ESTADO   FOREIGN KEY (ESTADO_ID)   REFERENCES ESTADO_ORDEN(ID)
);
CREATE SEQUENCE ORDEN_TRABAJO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_ORDEN_TRABAJO
  BEFORE INSERT ON ORDEN_TRABAJO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT ORDEN_TRABAJO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE DETALLE_ORDEN (
  ID            NUMBER(10)   PRIMARY KEY,
  ORDEN_ID      NUMBER(10)   NOT NULL,
  TIPO          CHAR(1)      NOT NULL,   -- 'S' servicio, 'R' repuesto
  SERVICIO_ID   NUMBER(10),              -- si TIPO='S'
  REPUESTO_ID   NUMBER(10),              -- si TIPO='R'
  DESCRIPCION   VARCHAR2(300),
  CANTIDAD      NUMBER(10,2) DEFAULT 1 NOT NULL,
  PRECIO_UNIT   NUMBER(19,4) DEFAULT 0 NOT NULL,
  TOTAL_LINEA   NUMBER(19,4) DEFAULT 0 NOT NULL,
  CONSTRAINT FK_DET_ORDEN        FOREIGN KEY (ORDEN_ID)    REFERENCES ORDEN_TRABAJO(ID),
  CONSTRAINT FK_DET_SERVICIO     FOREIGN KEY (SERVICIO_ID) REFERENCES SERVICIO(ID),
  CONSTRAINT FK_DET_REPUESTO     FOREIGN KEY (REPUESTO_ID) REFERENCES REPUESTO(ID),
  CONSTRAINT CK_DET_TIPO CHECK (TIPO IN ('S','R')),
  CONSTRAINT CK_DET_ENLACE CHECK (
    (TIPO='S' AND SERVICIO_ID IS NOT NULL AND REPUESTO_ID IS NULL) OR
    (TIPO='R' AND REPUESTO_ID IS NOT NULL AND SERVICIO_ID IS NULL)
  ),
  CONSTRAINT CK_DET_CANT_POS CHECK (CANTIDAD >= 0),
  CONSTRAINT CK_DET_PREC_POS CHECK (PRECIO_UNIT >= 0 AND TOTAL_LINEA >= 0)
);
CREATE SEQUENCE DETALLE_ORDEN_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_DETALLE_ORDEN
  BEFORE INSERT ON DETALLE_ORDEN
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT DETALLE_ORDEN_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE PAGO (
  ID          NUMBER(10)    PRIMARY KEY,
  ORDEN_ID    NUMBER(10)    NOT NULL,
  FECHA_PAGO  TIMESTAMP(6)  DEFAULT SYSTIMESTAMP NOT NULL,
  MONTO       NUMBER(19,4)  NOT NULL,
  METODO      VARCHAR2(20)  NOT NULL,  -- EFECTIVO/TARJETA/TRANSFERENCIA/OTRO
  REFERENCIA  VARCHAR2(60),
  CONSTRAINT FK_PAGO_ORDEN FOREIGN KEY (ORDEN_ID) REFERENCES ORDEN_TRABAJO(ID),
  CONSTRAINT CK_PAGO_METODO CHECK (METODO IN ('EFECTIVO','TARJETA','TRANSFERENCIA','OTRO'))
);
CREATE SEQUENCE PAGO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_PAGO
  BEFORE INSERT ON PAGO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT PAGO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

-- ===== SEGURIDAD =====
CREATE TABLE USUARIO (
  ID           NUMBER(10)    PRIMARY KEY,
  USERNAME     VARCHAR2(60)  NOT NULL UNIQUE,
  NOMBRE       VARCHAR2(100) NOT NULL,
  PASS_HASH    VARCHAR2(255) NOT NULL,
  ACTIVO       NUMBER(1)     DEFAULT 1 NOT NULL,
  CREATED_AT   TIMESTAMP(6)  DEFAULT SYSTIMESTAMP NOT NULL
);
CREATE SEQUENCE USUARIO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_USUARIO
  BEFORE INSERT ON USUARIO
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT USUARIO_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE ROL (
  ID       NUMBER(10)    PRIMARY KEY,
  NOMBRE   VARCHAR2(40)  NOT NULL UNIQUE
);
CREATE SEQUENCE ROL_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE OR REPLACE TRIGGER BI_ROL
  BEFORE INSERT ON ROL
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT ROL_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;
END;
/

CREATE TABLE USUARIO_ROL (
  USUARIO_ID NUMBER(10) NOT NULL,
  ROL_ID     NUMBER(10) NOT NULL,
  PRIMARY KEY (USUARIO_ID, ROL_ID),
  CONSTRAINT FK_UR_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID),
  CONSTRAINT FK_UR_ROL     FOREIGN KEY (ROL_ID)     REFERENCES ROL(ID)
);

-- ===== ÍNDICES RECOMENDADOS (FKs) =====
CREATE INDEX IX_VEHICULO_CLIENTE   ON VEHICULO (CLIENTE_ID);
CREATE INDEX IX_ORDEN_VEHICULO     ON ORDEN_TRABAJO (VEHICULO_ID);
CREATE INDEX IX_ORDEN_ESTADO       ON ORDEN_TRABAJO (ESTADO_ID);
CREATE INDEX IX_DET_ORDEN          ON DETALLE_ORDEN (ORDEN_ID);
CREATE INDEX IX_DET_SERVICIO       ON DETALLE_ORDEN (SERVICIO_ID);
CREATE INDEX IX_DET_REPUESTO       ON DETALLE_ORDEN (REPUESTO_ID);
CREATE INDEX IX_PAGO_ORDEN         ON PAGO (ORDEN_ID);
