-- ===== CLIENTE: agregar ACTIVO y VERSION si no existen =====
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE CLIENTE ADD (ACTIVO NUMBER(1) DEFAULT 1 NOT NULL)';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE NOT IN (-1430) THEN RAISE; END IF; -- -1430: ya existe columna
END;
/

BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE CLIENTE ADD (VERSION NUMBER(19))';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE NOT IN (-1430) THEN RAISE; END IF;
END;
/

-- Asegurar valores
UPDATE CLIENTE SET ACTIVO = NVL(ACTIVO, 1);

-- ===== Índices útiles =====
BEGIN
  EXECUTE IMMEDIATE 'CREATE INDEX IDX_CLIENTE_NOMBRES   ON CLIENTE(NOMBRES)';
EXCEPTION WHEN OTHERS THEN
  -- -955: nombre de índice ya usado; -1408: ya existe un índice sobre estas columnas
  IF SQLCODE NOT IN (-955, -1408) THEN RAISE; END IF;
END;
/

BEGIN
  EXECUTE IMMEDIATE 'CREATE INDEX IDX_CLIENTE_APELLIDOS ON CLIENTE(APELLIDOS)';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE NOT IN (-955, -1408) THEN RAISE; END IF;
END;
/

-- UNIQUE en DUI (si ya hay un índice sobre DUI, ORA-01408 saltará y lo ignoramos)
BEGIN
  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX UQ_CLIENTE_DUI ON CLIENTE(DUI)';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE NOT IN (-955, -1408) THEN RAISE; END IF;
END;
/

-- ===== DETALLE_ORDEN: Normalizar TIPO a 'S'/'R' y restringir =====
UPDATE DETALLE_ORDEN
   SET TIPO = CASE
                WHEN UPPER(SUBSTR(TRIM(TIPO),1,1)) IN ('S','R') THEN UPPER(SUBSTR(TRIM(TIPO),1,1))
                WHEN UPPER(TIPO) LIKE 'SERV%' THEN 'S'
                WHEN UPPER(TIPO) LIKE 'REP%'  THEN 'R'
                ELSE 'S'
              END
 WHERE TIPO IS NOT NULL;

BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE DETALLE_ORDEN MODIFY (TIPO VARCHAR2(1))';
EXCEPTION WHEN OTHERS THEN
  -- Si ya es VARCHAR2(1) o compatible, Oracle puede no necesitar cambio
  NULL;
END;
/

BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE DETALLE_ORDEN ADD CONSTRAINT CK_DETALLE_TIPO CHECK (TIPO IN (''S'',''R''))';
EXCEPTION WHEN OTHERS THEN
  -- -2275: restricción ya existe con ese nombre (o equivalente)
  IF SQLCODE != -2275 THEN RAISE; END IF;
END;
/
